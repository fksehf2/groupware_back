<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
    SQL File Name : FsysDeptDAO.xml
    Description : 부서 관리 담당
    Author : jij
    Since : 2021.04.14
-->

<mapper namespace="fsysDeptDAO">
	
	<!-- 부서 관리 리스트 조회 WHERE 조건 -->
	<sql id="incDeptList">
           <if test="searchInsttNm != null and searchInsttNm != ''">
               AND (A.INSTT_NM LIKE CONCAT('%', #{searchInsttNm}, '%') OR A.DEPT_NM LIKE CONCAT('%', #{searchInsttNm}, '%') OR A.TEAM_NM LIKE CONCAT('%', #{searchInsttNm}, '%'))
           </if>
           <if test="searchUseYn != null and searchUseYn != ''">
               AND A.USE_YN      = #{searchUseYn}   
           </if>
    </sql>
    
    <!-- 상세 코드 리스트 조회 WHERE 조건 -->
    <sql id="incDeptUserList">
    		AND TB.INSTT_CD      = #{searchInsttCd2}
    </sql>
	
	<!-- 부서 관리 리스트 토탈 카운트 -->
    <select id="queryFsysDeptMListTotCnt" parameterType="java.util.HashMap" resultType="int">
    	/* fsysDeptDAO.queryFsysDeptMListTotCnt 부서 관리 리스트 토탈 카운트 */
		
		SELECT COUNT(*) AS TOT_CNT
		  FROM INSTT A
		 WHERE 1 = 1
		<include refid="incDeptList"/>
    </select>
	
	<!-- 부서 관리 리스트 -->
    <select id="queryFsysDeptMList" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryFsysDeptMList 부서 관리 리스트*/
		
		SELECT   A.INSTT_CD
		       , A.UP_INSTT_CD
		       , A.INSTT_NM
		       , A.DEPT_NM
		       , A.TEAM_NM
		       , A.USE_YN
		       , CASE WHEN A.USE_YN = 'Y' THEN '사용' ELSE '미사용' END AS USE_YN_NM
		       , A.REG_DT
		       , A.REGR_ID
		       , A.UPD_DT
		       , A.UPDR_ID
		       , A.DEPT_LVL
		  FROM INSTT A
		 WHERE 1 = 1
			<include refid="incDeptList"/>
		 ORDER BY A.INSTT_CD
		 LIMIT #{pageStart}, #{perPageNum}
    </select>
    
  	<!-- 부서 등록 -->
    <insert id="regFsysDeptRDtl" parameterType="java.util.HashMap">
    	/* fsysDeptDAO.regFsysDeptRDtl  부서 등록 */
    	
    	INSERT INTO INSTT (
								  INSTT_CD
								, UP_INSTT_CD
								, INSTT_NM
								, DEPT_NM
								, TEAM_NM
								, USE_YN
								, REG_DT
								, REGR_ID
								, UPD_DT
								, UPDR_ID
								, DEPT_LVL
						   )
	               VALUES (
	               				(SELECT CONCAT('G',LPAD(IFNULL(MAX(SUBSTR(A.INSTT_CD,2,9)+1),1),9,0)) FROM INSTT A)
				               , #{upInsttCd}
				               , #{insttNm}
				             <if test='deptLvl.equals("2")'>
				               , #{teamNm}	
				             </if> 
				             <if test='!deptLvl.equals("2")'>
				             	, #{deptNm}
				             </if>
				             <if test='deptLvl.equals("3")'>
				               , #{teamNm}	
				             </if> 
				             <if test='!deptLvl.equals("3")'>
				             	, NULL
				             </if>    
				               , #{useYn}
				               , now()
				               , #{regrId}
				               , now()
				               , #{regrId}
				               , #{deptLvl}
				          )
    </insert>
    
    <!-- 부서 상세 정보 조회 -->
    <select id="queryFsysDeptMDtl" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryFsysDeptMDtl 부서 상세 정보 조회 */
		SELECT   A.INSTT_CD
		       , A.UP_INSTT_CD
		       , A.INSTT_NM
		       , A.DEPT_NM
		       , A.TEAM_NM
		       , A.USE_YN
		       , CASE WHEN A.USE_YN = 'Y' THEN '사용' ELSE '미사용' END AS USE_YN_NM
		       , A.REG_DT
		       , A.REGR_ID
		       , A.UPD_DT
		       , A.UPDR_ID
		       , (
		       		SELECT COUNT(INSTT_CD)  
		       		  FROM DEPT_USER B
		       		 WHERE B.INSTT_CD = A.INSTT_CD 
		         ) AS DEPT_USER_CNT
		       , A.DEPT_LVL  
		  FROM INSTT A
		 WHERE 1 = 1
		   AND A.INSTT_CD = #{insttCd}
	</select>
	
	<!-- 부서 상세 정보 수정 -->
    <update id="updFsysDeptUDtl">
		/* fsysDeptDAO.updFsysDeptUDtl 부서 상세 정보 수정 */
		
		UPDATE INSTT
		   SET   DEPT_NM  	= #{deptNm}
		   	   , TEAM_NM  	= #{teamNm}
			   , USE_YN    = #{useYn}
			   , UPD_DT    = NOW()
			   , UPDR_ID   = #{regrId}
		 WHERE INSTT_CD = #{insttCd}
    </update>
    
    <!-- 부서 상세 정보 수정 (상위부서의 과명 수정시 해당과에 속하는 팀의 과명 모두 수정) -->
    <update id="modifyFsysDeptNmAll">
		/* fsysDeptDAO.modifyFsysDeptNmAll (상위부서의 과명 수정시 해당과에 속하는 팀의 과명 모두 수정) */
		
		UPDATE INSTT
		   SET   DEPT_NM  	= #{deptNm}
		   	   , USE_YN    = #{useYn}
			   , UPD_DT    = NOW()
			   , UPDR_ID   = #{regrId}
		 WHERE UP_INSTT_CD = #{insttCd}
    </update>
    
    <!-- 부서 상세 정보 삭제 -->
    <delete id="delFsysDeptUDtl" parameterType="java.util.HashMap">
    	/* fsysDeptDAO.delFsysDeptUDtl 부서 상세 정보 삭제 */
        
        DELETE 
          FROM INSTT
         WHERE INSTT_CD = #{insttCd}
    </delete>
    
    <!-- 부서별 사용자 리스트 토탈 카운트 -->
    <select id="queryFsysDeptUserMListTotCnt" parameterType="java.util.HashMap" resultType="int">
    	/* fsysDeptDAO.queryFsysDeptUserMListTotCnt 부서별 사용자 리스트 토탈 카운트 */
		
		SELECT COUNT(*) AS TOT_CNT
		  FROM USER TA, DEPT_USER TB
		 WHERE 1 = 1
		   AND TA.USER_ID = TB.USER_ID
		   AND TA.USE_YN = 'Y'
		   AND TB.USE_YN = 'Y'
		<include refid="incDeptUserList"/>
    </select>
	
	<!-- 부서별 사용자 리스트 -->
    <select id="queryFsysDeptUserMList" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryFsysDeptUserMList 부서별 사용자 리스트 */
		
		SELECT   TB.INSTT_CD
			   , TB.USER_ID
			   , TA.USER_NM
			   , TB.APRV_DT
			   , CASE WHEN TB.MAIN_CRGR_YN IS NULL OR TB.MAIN_CRGR_YN = '' THEN 'N' ELSE 'Y' END AS MAIN_CRGR_YN
			   , TB.RTIR_DT
			   , TB.IOFIC_STAT_CD
			   , TB.APRV_AUTH_YN
			   , TB.USE_YN
			   , CASE WHEN TB.USE_YN = 'Y' THEN '사용' ELSE '미사용' END AS USE_YN_NM
			   , TB.REG_DT
			   , DATE_FORMAT(TB.REG_DT, '%Y-%m-%d') AS DISP_REG_DT
			   , TB.REGR_ID
			   , TB.UPD_DT
			   , TB.UPDR_ID
		  FROM USER TA, DEPT_USER TB
		 WHERE 1=1
		   AND TA.USER_ID = TB.USER_ID
		   AND TA.USE_YN = 'Y'
		   AND TB.USE_YN = 'Y'
			<include refid="incDeptUserList"/>
		 ORDER BY TB.INSTT_CD
		 LIMIT #{pageStart}, #{perPageNum}
    </select>
    
    <!-- 부서별 사용자 등록 -->
    <insert id="insertFsysDeptUser" parameterType="java.util.HashMap">
    	/* fsysDeptDAO.insertFsysDeptUser  부서별 사용자 등록 */
    	
    	INSERT INTO DEPT_USER (
   										  INSTT_CD
										, USER_ID
										, APRV_DT
										, MAIN_CRGR_YN
<!-- 										, RTIR_DT -->
<!-- 										, IOFIC_STAT_CD -->
										, APRV_AUTH_YN
										, USE_YN
										, REG_DT
										, REGR_ID
										, UPD_DT
										, UPDR_ID
								   )
							VALUES (
										  #{paramInsttCd}
										, #{userId}
										, REPLACE(#{aprvDt}, '-', '') 
										, #{mainCrgrYn}
<!-- 										, REPLACE(#{rtirDt}, '-', '')  -->
<!-- 										, #{ioficStatCd} -->
										, #{aprvAuthYn}
										, #{useYn}
						                , now()
						                , #{regrId}
						                , now()
						                , #{regrId}
								  )
    </insert>
    
    <!-- 부서별 사용자 상세 정보 조회 -->
    <select id="queryFsysDeptUserMDtl" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryFsysDeptUserMDtl 부서별 사용자 상세 정보 조회 */
    	
    	SELECT  A.INSTT_CD
    			, (
					 SELECT B.TEAM_NM 
					   FROM INSTT B 
					  WHERE B.INSTT_CD = A.INSTT_CD 
				  ) AS INSTT_CD_NM
				, A.USER_ID
				, (
					 SELECT B.USER_NM 
					   FROM USER B 
					  WHERE B.USER_ID = A.USER_ID 
				  ) AS USER_NM
				, A.APRV_DT
				, A.MAIN_CRGR_YN
				, A.RTIR_DT
				, A.IOFIC_STAT_CD
				, A.APRV_AUTH_YN
				, A.USE_YN
				, A.REG_DT
				, A.REGR_ID
				, A.UPD_DT
				, A.UPDR_ID
    	  FROM DEPT_USER A
		 WHERE 1=1
		   AND A.INSTT_CD = #{insttCd} 
		   AND A.USER_ID = #{userId} 
    </select>
    
    <!-- 부서별 사용자 상세 정보 수정 -->
    <update id="updFsysDeptUserUDtl">
		/* fsysDeptDAO.updFsysDeptUserUDtl 부서별 사용자 상세 정보 수정 */
		
		 UPDATE DEPT_USER
			SET   APRV_DT = REPLACE(#{aprvDt}, '-', '') 
			<if test="mainCrgrYn != null and mainCrgrYn != '' ">
				, MAIN_CRGR_YN = 'Y'
			</if>
			<if test="mainCrgrYn == null or mainCrgrYn == '' ">
				, MAIN_CRGR_YN = 'N'
			</if>	
				, RTIR_DT = REPLACE(#{rtirDt}, '-', '') 
<!-- 				, IOFIC_STAT_CD = #{ioficStatCd} -->
			<if test="aprvAuthYn != null and aprvAuthYn != '' ">
				, APRV_AUTH_YN = 'Y'
			</if>
			<if test="aprvAuthYn == null or aprvAuthYn == '' ">
				, APRV_AUTH_YN = 'N'
			</if>	 
				, USE_YN = #{useYn} 
				, UPD_DT = now()
				, UPDR_ID = #{regrId} 
		  WHERE INSTT_CD = #{insttCd}  
		    AND USER_ID = #{userId} 
    </update>
    
    <!-- 부서별 사용자 존재유무 조회 카운트 -->
	<select id="selectDeptUserExiCnt" parameterType="java.util.HashMap" resultType="int">
		/* fsysDeptDAO.selectDeptUserExiCnt 부서별 사용자 존재유무 조회 카운트 */
		SELECT COUNT(*)
		  FROM DEPT_USER
		 WHERE INSTT_CD = #{insInsttCd}
           AND USER_ID = #{userId}
	</select>
    
    <!-- 부서별 사용자 등록 후 이전 사용자 정보 삭제 -->
    <update id="modifyFsysDeptUserDetail">
		/* fsysDeptDAO.modifyFsysDeptUserDetail 부서별 사용자 등록 후 이전 사용자 정보 수정 */
		
		 UPDATE DEPT_USER
		 	SET USE_YN = #{useYn}
			<if test="rtirDt != null or rtirDt != '' ">
				, RTIR_DT = REPLACE(#{rtirDt},'-','') 
			</if>
			<if test="rtirDt == null or rtirDt == '' ">
				, RTIR_DT = NULL
			</if>	
				, UPD_DT = now()
				, UPDR_ID = #{regrId} 
		  WHERE INSTT_CD = #{insInsttCd}
            AND USER_ID = #{userId}
		  
    </update>
    
    <!-- 사용자 정보의 부서코드를 새로 등록한 부서코드로 수정 -->
    <update id="modifyFsysUserDetail">
		/* fsysDeptDAO.modifyFsysUserDetail 사용자 정보의 부서코드를 새로 등록한 부서코드로 수정 */
		
		 UPDATE USER
			SET   INSTT_CD = #{paramInsttCd} 
				, UPD_DT = now()
				, UPDR_ID = #{regrId} 
		  WHERE USER_ID = #{userId} 
    </update>
    
    
    <!-- 부서별 사용자 상세 정보 삭제 -->
    <delete id="delFsysDeptUserUDtl" parameterType="java.util.HashMap">
    	/* fsysDeptDAO.delFsysDeptUserUDtl 부서별 사용자 상세 정보 삭제 */
        
        DELETE 
          FROM DEPT_USER
         WHERE INSTT_CD = #{insttCd}
           AND USER_ID = #{userId}
    </delete>
    
    <!-- 부서레벨 조회 -->
    <select id="queryDeptLvlList" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryDeptLvlList  부서레벨 조회 */
		
		SELECT DEPT_LVL AS CD
		     , DEPT_LVL AS CD_NM
		     , 'deptLvl' AS CD_ID
		  FROM INSTT
		 WHERE 1=1
		   AND DEPT_LVL NOT IN ('1')
		 GROUP BY DEPT_LVL 
		  
    </select>
    
    <!-- 상위부서리스트 조회 -->
    <select id="queryUprDeptMList" parameterType="java.util.HashMap" resultType="egovMap">
    	/* fsysDeptDAO.queryUprDeptMList 상위부서리스트 조회 */
		
		SELECT DI.INSTT_CD AS CD
		     , CASE WHEN DI.DEPT_NM IS NULL OR DI.DEPT_NM='' THEN '국방부검찰단' ELSE DI.DEPT_NM END AS CD_NM
		     , 'deptLvl' AS CD_ID
		  FROM INSTT DI
		 WHERE 1=1
		   AND DI.DEPT_LVL = #{deptLvl}
		 GROUP BY DI.INSTT_CD, DI.DEPT_NM, DI.DEPT_LVL 
		 ORDER BY DI.INSTT_CD
    </select>
    
    <!-- 삭제할려는 부서에 속한 하위부서 유무 조회 -->
	<select id="selectLowerDeptCount" parameterType="java.util.HashMap" resultType="int">
		/* fsysDeptDAO.selectLowerDeptCount 삭제할려는 부서에 속한 하위부서 유무 조회*/
		 SELECT COUNT(*)
		   FROM INSTT DI
		  WHERE DI.UP_INSTT_CD = #{insttCd}
	</select>
    
</mapper>
