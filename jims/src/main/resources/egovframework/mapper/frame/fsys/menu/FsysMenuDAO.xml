<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
    SQL File Name : FsysMenuDAO.xml
    Description : 메뉴 관리 담당
    Author : jij
    Since : 2021.04.14
-->

<mapper namespace="fsysMenuDAO">
	
	<!-- @!@ 메뉴 리스트 조회 조건 -->
	<sql id="WmenuList">
                        <!-- AND NVL(SA.SYS_GRP, ' ') LIKE DECODE(#{{srcSysGrp}, NULL, '%', }{srcSysGrp}) -->
                        <if test="srcMenuLvl != null and srcMenuLvl != ''">
				        AND #{srcMenuLvl} = (CASE WHEN SA.PROGRAM_ID IS NULL OR PROGRAM_ID = ''  THEN 'lvl1' ELSE 'lvl2' END)
				        </if>
                        <if test="srcSysGrp != null and srcSysGrp != ''">
                        AND SA.SYS_GRP = #{srcSysGrp}
                        </if>
                        AND SA.UPPER_MENU_NO IS NOT NULL
                        <if test="srcMenugrp != null and srcMenugrp != ''">
                        AND SA.UPPER_MENU_NO LIKE CONCAT('%', #{srcMenugrp}, '______%')
                        </if>
                        <if test="useYn != null and useYn != ''">
				        AND SA.USE_YN = #{useYn}
				        </if>
                        AND SA.MENU_NM LIKE CONCAT('%', #{srcMenuNm}, '%')
    </sql>
	
	<!-- @!@ 메뉴 목록 토탈 카운트 -->
	<select id="queryFsysMenuMListTotCnt" parameterType="java.util.HashMap" resultType="int">
		/* queryFsysMenuMListTotCnt @!@ 메뉴 목록 토탈 카운트 */
		SELECT 
			COUNT(*) TOT_CNT
		FROM
			MENUINFO SA
		WHERE
			1 = 1
		<include refid="WmenuList"/>
	</select>
	
	<!-- @!@ 메뉴 목록 -->
    <select id="queryFsysMenuMList" parameterType="java.util.HashMap" resultType="egovMap">
    	/* queryFsysMenuMList @!@ 메뉴 목록 */
		SELECT
			SA.SYS_GRP
			,SA.MENU_NO
			,SA.MENU_NM
			,SA.PROGRAM_ID
			,(SELECT PROGRAM_EXPL FROM PROGRAM_LIST C WHERE SA.PROGRAM_ID =C.PROGRAM_ID) PROGRAM_EXPL
			,SA.UPPER_MENU_NO
			,(SELECT MENU_NM FROM MENUINFO B WHERE SA.UPPER_MENU_NO = MENU_NO LIMIT 1) UPPER_MENU_NM
			,SA.MENU_ORDR
			,SA.MENU_DC
			,SA.MENU_AUTHOR
			,SA.MENU_DISPLAY_YN
			-- ,CASE WHEN SA.PROGRAM_ID IS NULL OR PROGRAM_ID = '' THEN 'lvl1' ELSE 'lvl2' END MENU_LVL
			,CASE WHEN RIGHT(SA.MENU_NO, 2) = '00' THEN 'lvl1' ELSE 'lvl2' END MENU_LVL
		FROM
			MENUINFO SA
		WHERE
			1 = 1
            <include refid="WmenuList"/>
        ORDER BY
        	SA.MENU_NO
		LIMIT
			#{pageStart}, #{perPageNum}
	</select>

    <!-- @!@ 상위메뉴 코드 리스트 -->
    <select id="queryFsysMenuUpperList" parameterType="java.util.HashMap" resultType="egovMap">
		/* queryFsysMenuUpperList @!@ 상위메뉴 코드 리스트 */
		SELECT 
			MENU_NO SYS_GRP
			,MENU_NM SYS_GRP_NM
			,UPPER_MENU_NO
		FROM
			MENUINFO
		WHERE
			UPPER_MENU_NO IN (
				SELECT
					MENU_NO
				FROM
					MENUINFO
				WHERE
					SYS_GRP = #{sysGrp}
					AND UPPER_MENU_NO IS NULL
			)
    </select>
    
    <!-- @!@ 최상위 메뉴 ID  -->
    <select id="queryFsysMenuUpperId" parameterType="java.util.HashMap" resultType="egovMap">
		/* queryFsysMenuUpperId @!@ 최상위 메뉴 ID */
		SELECT 
			MENU_NO AS TOP_MENU_NO
		FROM
			MENUINFO
		WHERE
			SYS_GRP = #{sysGrp}
			AND UPPER_MENU_NO IS NULL
    </select>
    
    <!-- @!@ lvl2 totalcnt 조회  -->
    <select id="queryFsysMenuLvl2Cnt" parameterType="java.util.HashMap" resultType="int">
		/* queryFsysMenuLvl2Cnt @!@ lvl2 totalcnt 조회 */
		SELECT
			count(*)
		FROM
			MENUINFO
		WHERE
			UPPER_MENU_NO = #{upperMenuNo}
    </select>
    
    <!-- @!@ 메뉴 등록 -->
    <insert id="regFsysMenuRDtl" parameterType="java.util.HashMap">
    	/* regFsysMenuRDtl @!@ 메뉴 등록 */
		INSERT INTO MENUINFO (
			SYS_GRP
			, MENU_NO
			, MENU_NM
			, PROGRAM_ID
			, UPPER_MENU_NO
			, MENU_ORDR
			, MENU_AUTHOR
			, MENU_DISPLAY_YN
			, USE_YN
			, REG_DT
			, REGR_ID 
		)
		VALUES (
			NVL(#{sysGrp},'0')
			<choose>
				<when test="menuNo neq null and menuNo neq ''">
					, #{menuNo}
				</when>
				<otherwise>
					<choose>
						<when test="menuLvl eq 'lvl1'">
							, ( SELECT CONCAT('M', LPAD(NVL(MAX(SUBSTRING(A.MENU_NO,2, 7)),0)+1,7,0), '00') FROM MENUINFO A )
						</when>
						<when test="menuLvl eq 'lvl2'">
							, ( SELECT CONCAT('M', LPAD(NVL(MAX(SUBSTRING(A.MENU_NO,2)),0)+1,9,0)) FROM MENUINFO A WHERE LEFT(A.MENU_NO, 8) = LEFT(#{upperMenuNo}, 8) )
						</when>
					</choose>
				
				</otherwise>
			</choose>
			, #{menuNm}
			, #{programId}
			, ( CASE WHEN #{menuLvl} = 'lvl1' THEN #{topMenuNo} ELSE #{upperMenuNo} END )
			<choose>
				<when test="menuLvl eq 'lvl1'">
					<choose>
						<when test="menuOrdr neq null and menuOrdr neq ''">
							, #{menuOrdr}
						</when>
						<otherwise>
							, (SELECT NVL(MAX(A.MENU_ORDR), 0) + 1 FROM MENUINFO A WHERE RIGHT(A.MENU_NO, 2) = '00')
						</otherwise>
					</choose>
				</when>
				<when test="menuLvl eq 'lvl2'">
					<choose>
						<when test="menuOrdr neq null and menuOrdr neq ''">
							, #{menuOrdr}
						</when>
						<otherwise>
							, (SELECT NVL(MAX(A.MENU_ORDR), 0) + 1 FROM MENUINFO A WHERE LEFT(A.MENU_NO, 8) = LEFT(#{upperMenuNo}, 8))
						</otherwise>
					</choose>
				</when>
			</choose>
			, #{menuAuthor}
			, #{menuDisplayYn}
			, 'Y'
			, NOW()
			, #{SessionID}
		)
		<!-- ON DUPLICATE KEY UPDATE 
			MENU_NM           = #{menuNm}
			, PROGRAM_ID      = #{programId}
			, UPPER_MENU_NO   = ( CASE WHEN #{menuLvl} = 'lvl1' THEN #{topMenuNo} ELSE #{upperMenuNo} END )
			, MENU_ORDR       = #{menuOrdr}
			, MENU_AUTHOR     = #{menuAuthor}
			, MENU_DISPLAY_YN = #{menuDisplayYn}
			, UPD_DT     	  = NOW()
			, UPDR_ID         = #{SessionID} -->
    </insert>
    
    <!-- @!@ 1단계 메뉴만 order update -->
    <update id="updFsysMenuRDtlOrdr" parameterType="java.util.HashMap">
    	/* updFsysMenuRDtlOrdr @!@ 1단계 메뉴만 order update */
    	UPDATE
			MENUINFO A
		SET
			MENU_ORDR = (
				SELECT
					RN
				FROM
					(
					SELECT
						MENU_NO, SYS_GRP, ROW_NUMBER() OVER(
						ORDER BY MENU_ORDR, REG_DT DESC ) RN
					from
						MENUINFO B
					WHERE
						SYS_GRP = #{sysGrp}
						AND UPPER_MENU_NO IS NOT NULL
						AND NVL(PROGRAM_ID, 0) = '0'
					ORDER BY
						MENU_ORDR, REG_DT DESC ) B
				WHERE
					A.MENU_NO = B.MENU_NO
					AND A.SYS_GRP = B.SYS_GRP
			)
			, UPD_DT = NOW()
			, UPDR_ID = #{session_userid}
		WHERE
			EXISTS (
			SELECT
				1
			FROM
				MENUINFO C
			WHERE
				A.MENU_NO = C.MENU_NO
				AND A.SYS_GRP = C.SYS_GRP )
			AND SYS_GRP = #{sysGrp}
			AND UPPER_MENU_NO IS NOT NULL
			AND NVL(PROGRAM_ID, 0) = '0'
    </update>
    
    <!-- @!@ 2lvl MENU_NO 순서대로 재정의 -->
    <update id="updFsysMenuNoReMake" statementType="CALLABLE" parameterType="java.util.HashMap">
    	/* updFsysMenuNoReMake @!@ 2lvl MENU_NO 순서대로 재정의 */
        { CALL FN_MENUINFO_MENU_NO_REMAKE(#{upperMenuNo}) }
	</update>
	
	<!-- @!@ 메뉴 상세 조회 -->
    <select id="queryFsysMenuMDtl" parameterType="java.util.HashMap" resultType="egovMap">
    	/* queryFsysMenuMDtl @!@ 메뉴 상세 조회  */
		SELECT
			SA.SYS_GRP
            , SA.MENU_NO
            , SA.MENU_NM
            , SA.PROGRAM_ID
            , SA.UPPER_MENU_NO
            , SA.UPPER_MENU_NO AS TOP_MENU_NO
            , SA.MENU_ORDR
            , SA.MENU_DC
            , SA.MENU_AUTHOR
            , SA.MENU_DISPLAY_YN
		FROM
			MENUINFO SA
		WHERE
			1 = 1
			<if test="useYn != null and useYn != ''">
	        AND SA.USE_YN = #{useYn}
	        </if>
	        AND SA.SYS_GRP = #{sysGrp}
	        AND SA.MENU_NO = #{menuNo}
    </select>
    
    <!-- @!@ 메뉴 수정 -->
    <update id="updFsysMenuUDtl" parameterType="java.util.HashMap">
    	/* updFsysMenuUDtl @!@ 메뉴 수정*/
		UPDATE MENUINFO SET
			<if test="menuLvl eq 'lvl2'">
				<choose>
					<when test="upperMenuNo neq oriUpperMenuNo">
						MENU_NO = ( SELECT CONCAT('M', LPAD(NVL(MAX(SUBSTRING(A.MENU_NO,2)),0)+1,9,0)) FROM MENUINFO A WHERE LEFT(A.MENU_NO, 8) = LEFT(#{upperMenuNo}, 8) ),
					</when>
					<otherwise>
						<!-- MENU_NO = #{menuNo}, -->
					</otherwise>
				</choose>
			</if>
			MENU_NM = #{menuNm}
			, PROGRAM_ID = #{programId}
			<if test="menuLvl eq 'lvl2' and upperMenuNo neq oriUpperMenuNo">
			, UPPER_MENU_NO = #{upperMenuNo}
			</if>
			<choose>
				<when test="menuLvl eq 'lvl1'">
					<choose>
						<when test="menuOrdr neq null and menuOrdr neq ''">
							, MENU_ORDR = #{menuOrdr}
						</when>
						<otherwise>
							, MENU_ORDR = (SELECT NVL(MAX(A.MENU_ORDR), 0) + 1 FROM MENUINFO A WHERE RIGHT(A.MENU_NO, 2) = '00')
						</otherwise>
					</choose>
				</when>
				<when test="menuLvl eq 'lvl2'">
					<choose>
						<when test="menuOrdr neq null and menuOrdr neq ''">
							, MENU_ORDR = #{menuOrdr}
						</when>
						<otherwise>
							, MENU_ORDR = (SELECT NVL(MAX(A.MENU_ORDR), 0) + 1 FROM MENUINFO A WHERE LEFT(A.MENU_NO, 8) = LEFT(#{upperMenuNo}, 8))
						</otherwise>
					</choose>
				</when>
			</choose>
			, MENU_AUTHOR = #{menuAuthor}
			, MENU_DISPLAY_YN = #{menuDisplayYn}
			, UPD_DT = NOW()
			, UPDR_ID = #{session_userid}
		WHERE
			MENU_NO = #{menuNo}
			AND SYS_GRP = #{sysGrp}
    </update>
    
    <!-- @!@ 하위 메뉴 cnt 조회  -->
    <select id="queryFsysMenuLowerCnt" parameterType="java.util.HashMap" resultType="int">
    	/* queryFsysMenuLowerCnt @!@ 하위메뉴 cnt 조회 */
           SELECT COUNT(*)  CNT
			  FROM MENUINFO 
			 WHERE SYS_GRP      = #{sysGrp}
			   AND UPPER_MENU_NO= #{menuNo}
		                  
    </select>
    
    <!-- @!@ 메뉴 삭제   -->
    <delete id="delFsysMenuUDtl" parameterType="java.util.HashMap">
    	/* delFsysMenuUDtl @!@ 메뉴 삭제 */
        DELETE FROM MENUINFO
        WHERE 1 = 1
        AND SYS_GRP = NVL(#{sysGrp},'0')
        AND MENU_NO = #{menuNo}
    </delete>
    
    <!-- @!@ 프로그램 삭제 시 메뉴에서 프로그램아이디 제거 -->
    <update id="updFsysMenuUProgramId">
		/* updFsysMenuUProgramId @!@ 프로그램 삭제 시 메뉴에서 프로그램아이디 제거 */
        UPDATE MENUINFO SET 
        	PROGRAM_ID   = NULL
        	, UPD_DT = NOW()
			, UPDR_ID = #{session_userid}
		WHERE
			PROGRAM_ID   = #{programId}     
    </update>
    
    <!-- @!@ 사용자 그룹 코드 등록 시 최상위 메뉴 등록 -->
    <insert id="regFsysMenuRTopMenu" parameterType="java.util.HashMap">
    	/* regFsysMenuRTopMenu @!@ 사용자 그룹 코드 등록 시 최상위 메뉴 등록 */
		INSERT INTO MENUINFO (
			MENU_NO
			,MENU_NM
			,MENU_ORDR
			,SYS_GRP
			,MENU_DISPLAY_YN
			,USE_YN
			,REG_DT
			,REGR_ID
		)
		VALUES (
			(SELECT CONCAT('M', LPAD(NVL(MAX(RIGHT(A.MENU_NO, 2)), '0')+1, 9, 0)) FROM MENUINFO A WHERE A.UPPER_MENU_NO IS NULL)
			, #{menuNm}
			, #{menuOrdr}
			, #{sysGrp}
			, 'Y'
			, 'Y'
			, NOW()
			, #{session_userid}
		)
    </insert>
    
</mapper>
